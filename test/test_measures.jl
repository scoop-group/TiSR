
# TODO: test get_measure_max_ae(prediction, target, node, ops)
# TODO: test get_measure_mae(prediction, target, node, ops)
# TODO: test get_measure_mse(prediction, target, node, ops)
# TODO: test get_measure_one_minus_r2(prediction, target, node, ops)
# TODO: test get_measure_one_minus_abs_spearman(prediction, target, node, ops)
# TODO: test get_measure_mare(prediction, target, node, ops)
# TODO: test get_measure_q75_are(prediction, target, node, ops)
# TODO: test get_measure_max_are(prediction, target, node, ops)
# TODO: test get_measure_ms_processed_e(prediction, target, node, ops)
# TODO: test get_measure_max_ae_test(prediction, target, node, ops)
# TODO: test get_measure_mae_test(prediction, target, node, ops)
# TODO: test get_measure_mse_test(prediction, target, node, ops)
# TODO: test get_measure_one_minus_r2_test(prediction, target, node, ops)
# TODO: test get_measure_one_minus_abs_spearman_test(prediction, target, node, ops)
# TODO: test get_measure_mare_test(prediction, target, node, ops)
# TODO: test get_measure_q75_are_test(prediction, target, node, ops)
# TODO: test get_measure_max_are_test(prediction, target, node, ops)
# TODO: test get_measure_ms_processed_e_test(prediction, target, node, ops)
# TODO: test get_measure_compl(prediction, target, node, ops)           = count_nodes(node)
# TODO: test get_measure_weighted_compl(prediction, target, node, ops)  = get_weighted_compl(node, ops)
# TODO: test get_measure_recursive_compl(prediction, target, node, ops) = recursive_compl(node, ops)
# TODO: test get_measure_n_params(prediction, target, node, ops)        = length(list_of_param_nodes(node))
# TODO: test recursive_compl(node::Node, ops)
# TODO: test get_weighted_compl(node, ops) # TODO: test
# TODO: test get_one_minus_r2(pred, orig)
# TODO: test get_one_minus_abs_spearman(pred, orig)
